---
- name: Create backup directory
  file: "path={{ www_root }}/{{ item.key }}/backup state=directory owner={{ admin_user }} group=sudo mode=0700 recurse=yes"
  with_dict: "{{ wordpress_sites }}"

  # Define the purge jobs to prevent backups from filling the server over time.
  
  # Purge uploads backups
- name: Create uploads purge job
  cron: name="Purge old uploads backups" minute="0" hour="1"
        cron_file=purge
        user="{{ admin_user }}" job="duply /etc/duply/{{ item.key }}_uploads purge"
  with_dict: "{{ wordpress_sites }}"
  
  # Purge database backups
- name: Create database purge job
  cron: name="Purge old database backups" minute="0" hour="2"
        cron_file=purge
        user="{{ admin_user }}" job="duply /etc/duply/{{ item.key }}_database purge"  
  with_dict: "{{ wordpress_sites }}"
  
  # Set up variables used by Stouts.backup to create backup jobs.
- name: Create backup jobs
  set_fact:
    backup_user: "{{ admin_user }}"
    backup_group: sudo
    
    backup_target_user: "{{ admin_user }}"
    backup_target_pass: "{{ vault_sudoer_passwords.admin }}"

    backup_mysql_user: "{{ mysql_root_user }}"
    backup_mysql_pass: "{{ mysql_root_password }}"
    
    # Backups are kept for 1 month by default. See Stouts.backup documentation to change this window.
    # Make only full backups, not incremental.
    backup_full_max_age: 8h          # Don't make a new full backup until the latest backup is at least this old. This is a safety check in case the backup runs repeatedly.

    # Define the backup jobs
    backup_profiles:
    
    # Backup uploads
      - name: "{{ item.key }}_uploads"
        schedule: 0 3 * * *                                             # At 3am every day
        source: "{{ www_root }}/{{ item.key }}/shared/uploads"
        target: "file://{{ www_root }}/{{ item.key }}/backup/uploads"
        
    # Backup database
      - name: "{{ item.key }}_database"
        schedule: 0 4 * * *                                              # At 4am every day
        source: "mysql://{{ item.key | underscore }}_{{ env }}"          # Backup prefixes: postgresql://, maysql://, mongo://
        target: "file://{{ www_root }}/{{ item.key }}/backup/database"
  with_dict: "{{ wordpress_sites }}"
